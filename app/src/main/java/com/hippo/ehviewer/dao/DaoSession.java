package com.hippo.ehviewer.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.hippo.ehviewer.dao.DownloadInfo;
import com.hippo.ehviewer.dao.DownloadLabel;
import com.hippo.ehviewer.dao.DownloadDirname;
import com.hippo.ehviewer.dao.HistoryInfo;
import com.hippo.ehviewer.dao.QuickSearch;
import com.hippo.ehviewer.dao.LocalFavoriteInfo;
import com.hippo.ehviewer.dao.BookmarkInfo;
import com.hippo.ehviewer.dao.Filter;

import com.hippo.ehviewer.dao.DownloadsDao;
import com.hippo.ehviewer.dao.DownloadLabelDao;
import com.hippo.ehviewer.dao.DownloadDirnameDao;
import com.hippo.ehviewer.dao.HistoryDao;
import com.hippo.ehviewer.dao.QuickSearchDao;
import com.hippo.ehviewer.dao.LocalFavoritesDao;
import com.hippo.ehviewer.dao.BookmarksDao;
import com.hippo.ehviewer.dao.FilterDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig downloadsDaoConfig;
    private final DaoConfig downloadLabelDaoConfig;
    private final DaoConfig downloadDirnameDaoConfig;
    private final DaoConfig historyDaoConfig;
    private final DaoConfig quickSearchDaoConfig;
    private final DaoConfig localFavoritesDaoConfig;
    private final DaoConfig bookmarksDaoConfig;
    private final DaoConfig filterDaoConfig;

    private final DownloadsDao downloadsDao;
    private final DownloadLabelDao downloadLabelDao;
    private final DownloadDirnameDao downloadDirnameDao;
    private final HistoryDao historyDao;
    private final QuickSearchDao quickSearchDao;
    private final LocalFavoritesDao localFavoritesDao;
    private final BookmarksDao bookmarksDao;
    private final FilterDao filterDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        downloadsDaoConfig = daoConfigMap.get(DownloadsDao.class).clone();
        downloadsDaoConfig.initIdentityScope(type);

        downloadLabelDaoConfig = daoConfigMap.get(DownloadLabelDao.class).clone();
        downloadLabelDaoConfig.initIdentityScope(type);

        downloadDirnameDaoConfig = daoConfigMap.get(DownloadDirnameDao.class).clone();
        downloadDirnameDaoConfig.initIdentityScope(type);

        historyDaoConfig = daoConfigMap.get(HistoryDao.class).clone();
        historyDaoConfig.initIdentityScope(type);

        quickSearchDaoConfig = daoConfigMap.get(QuickSearchDao.class).clone();
        quickSearchDaoConfig.initIdentityScope(type);

        localFavoritesDaoConfig = daoConfigMap.get(LocalFavoritesDao.class).clone();
        localFavoritesDaoConfig.initIdentityScope(type);

        bookmarksDaoConfig = daoConfigMap.get(BookmarksDao.class).clone();
        bookmarksDaoConfig.initIdentityScope(type);

        filterDaoConfig = daoConfigMap.get(FilterDao.class).clone();
        filterDaoConfig.initIdentityScope(type);

        downloadsDao = new DownloadsDao(downloadsDaoConfig, this);
        downloadLabelDao = new DownloadLabelDao(downloadLabelDaoConfig, this);
        downloadDirnameDao = new DownloadDirnameDao(downloadDirnameDaoConfig, this);
        historyDao = new HistoryDao(historyDaoConfig, this);
        quickSearchDao = new QuickSearchDao(quickSearchDaoConfig, this);
        localFavoritesDao = new LocalFavoritesDao(localFavoritesDaoConfig, this);
        bookmarksDao = new BookmarksDao(bookmarksDaoConfig, this);
        filterDao = new FilterDao(filterDaoConfig, this);

        registerDao(DownloadInfo.class, downloadsDao);
        registerDao(DownloadLabel.class, downloadLabelDao);
        registerDao(DownloadDirname.class, downloadDirnameDao);
        registerDao(HistoryInfo.class, historyDao);
        registerDao(QuickSearch.class, quickSearchDao);
        registerDao(LocalFavoriteInfo.class, localFavoritesDao);
        registerDao(BookmarkInfo.class, bookmarksDao);
        registerDao(Filter.class, filterDao);
    }
    
    public void clear() {
        downloadsDaoConfig.clearIdentityScope();
        downloadLabelDaoConfig.clearIdentityScope();
        downloadDirnameDaoConfig.clearIdentityScope();
        historyDaoConfig.clearIdentityScope();
        quickSearchDaoConfig.clearIdentityScope();
        localFavoritesDaoConfig.clearIdentityScope();
        bookmarksDaoConfig.clearIdentityScope();
        filterDaoConfig.clearIdentityScope();
    }

    public DownloadsDao getDownloadsDao() {
        return downloadsDao;
    }

    public DownloadLabelDao getDownloadLabelDao() {
        return downloadLabelDao;
    }

    public DownloadDirnameDao getDownloadDirnameDao() {
        return downloadDirnameDao;
    }

    public HistoryDao getHistoryDao() {
        return historyDao;
    }

    public QuickSearchDao getQuickSearchDao() {
        return quickSearchDao;
    }

    public LocalFavoritesDao getLocalFavoritesDao() {
        return localFavoritesDao;
    }

    public BookmarksDao getBookmarksDao() {
        return bookmarksDao;
    }

    public FilterDao getFilterDao() {
        return filterDao;
    }

}
